---
- name: Become sudo user
  hosts: ubuntu:22.04
  become: true

  vars:
    ubuntu_version: 22.04
    ubuntu_image: jammy
    nginx_image: private/nginx
    container_image: nginx-example-docker

  vars_prompt:
    - name: docker_username
      prompt: "Enter Docker Hub Username"
      private: false
    - name: docker_password
      prompt: "Enter Docker Hub Password"
      private: true

  tasks:
    - name: Install Docker prerequisites
      ansible.builtin.apt:
        name: "{{ item }}"
        update_cache: true
      loop:
        - ca-certificates
        - curl
        - gnupg-agent

    - name: Add Docker's official GPG key
      ansible.builtin.command:
        cmd: install -m 0755 -d /etc/apt/keyrings

    - name: Add Docker's official GPG key
      ansible.builtin.command:
        cmd: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/trusted.gpg.d/docker.gpg

    - name: Add the repository to Apt sources
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ UBUNTU_IMAGE }} stable
        state: present

    - name: Install Docker
      ansible.builtin.apt:
        name: "{{ item }}"
        update_cache: true
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin

    - name: Start Docker service
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true

    - name: Login to Docker Hub
      community.docker.docker_login:
        username: "{{ docker_username }}"
        password: "{{ docker_password }}"

    - name: Nginx Image pull
      community.docker.docker_image:
        name: "{{ nginx_image }}"
        source: pull
        pull:
          platform: amd64

    - name: Run docker container
      community.docker.docker_container:
        name: "{{ container_name }}"
        image: "{{ nginx_image }}"
        state: started
        exposed_ports:
          - 443
        ports:
          - "443:443"
